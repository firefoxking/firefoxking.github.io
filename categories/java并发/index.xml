<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java并发 on Hello Friend</title>
    
    
    
    <link>https://firefoxking.github.io/categories/java%E5%B9%B6%E5%8F%91/</link>
    <description>Recent content in java并发 on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 07 Oct 2021 17:16:29 +0800</lastBuildDate>
    
	<atom:link href="https://firefoxking.github.io/categories/java%E5%B9%B6%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java线程池</title>
      <link>https://firefoxking.github.io/post/java%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
      <pubDate>Thu, 07 Oct 2021 17:16:29 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/java%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
      <description>
        
          
          
          
        
        
        
          Java 中的线程池是运用场景最多的并发框架，几乎所有需要异步或并发执行任务的程序都可以使用线程池。
          
        
        </description>
    </item>
    
    <item>
      <title>Java内存模型</title>
      <link>https://firefoxking.github.io/post/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 02 Oct 2021 17:36:04 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
      <description>
        
          
          
          
        
        
        
          **Java 内存模型（简称JMM）**就是在底层处理器内存模型的基础上，定义自己的多线程语义，用来保证多线程间的可见性
          
        
        </description>
    </item>
    
    <item>
      <title>JUC工具类使用</title>
      <link>https://firefoxking.github.io/post/JUC%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 29 Sep 2021 22:00:36 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/JUC%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BD%BF%E7%94%A8/</guid>
      <description>
        
          
          
          
        
        
        
          JUC 利用底层的 AQS 实现了多个用于同步的常用并发工具类，包括CountDownLatch、CyclicBarrier、Semaphore。
          
        
        </description>
    </item>
    
    <item>
      <title>JUC锁原理分析之AQS核心类</title>
      <link>https://firefoxking.github.io/post/JUC%E9%94%81%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90%E4%B9%8BAQS%E6%A0%B8%E5%BF%83%E7%B1%BB/</link>
      <pubDate>Fri, 17 Sep 2021 14:17:33 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/JUC%E9%94%81%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90%E4%B9%8BAQS%E6%A0%B8%E5%BF%83%E7%B1%BB/</guid>
      <description>
        
          
          
          
        
        
        
          队列同步器AbstractQueuedSynchronizer，是用来构建锁或者其他同步组件的基础框架，被认为是 J.U.C 的核心。
          
        
        </description>
    </item>
    
    <item>
      <title>JUC集合之BlockingQueue</title>
      <link>https://firefoxking.github.io/post/JUC%E9%9B%86%E5%90%88%E4%B9%8BBlockingQueue/</link>
      <pubDate>Fri, 17 Sep 2021 11:17:33 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/JUC%E9%9B%86%E5%90%88%E4%B9%8BBlockingQueue/</guid>
      <description>
        
          
          
          
        
        
        
          BlockingQueue是一个**先进先出**的队列(Queue)，之所以说是阻塞(Blocking)是因为在获取队列元素时，如果队列为空，则会阻塞等待队列有元素再返回。
          
        
        </description>
    </item>
    
    <item>
      <title>JUC锁原理分析之LockSupport</title>
      <link>https://firefoxking.github.io/post/JUC%E9%94%81%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90%E4%B9%8BLockSupport/</link>
      <pubDate>Fri, 17 Sep 2021 10:47:46 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/JUC%E9%94%81%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90%E4%B9%8BLockSupport/</guid>
      <description>
        
          
          
          
        
        
        
          JUC提供了LockSupport工具类，它的主要作用是挂起和唤醒线程，该工具类是创建锁和其他同步类的基础，是一个提供锁机制的工具类。
          
        
        </description>
    </item>
    
  </channel>
</rss>