<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Hello Friend</title>
    
    
    
    <link>https://firefoxking.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 03 Jan 2022 15:32:52 +0800</lastBuildDate>
    
	<atom:link href="https://firefoxking.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>刷题打卡day8</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day8/</link>
      <pubDate>Mon, 03 Jan 2022 15:32:52 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day8/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>刷题打卡day7</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day7/</link>
      <pubDate>Sun, 02 Jan 2022 15:27:56 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day7/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>刷题打卡day6</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day6/</link>
      <pubDate>Sat, 01 Jan 2022 12:28:41 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day6/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>字符串系列第二弹</title>
      <link>https://firefoxking.github.io/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B3%BB%E5%88%97%E7%AC%AC%E4%BA%8C%E5%BC%B9/</link>
      <pubDate>Fri, 31 Dec 2021 16:32:36 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B3%BB%E5%88%97%E7%AC%AC%E4%BA%8C%E5%BC%B9/</guid>
      <description>
        
          
          
          
        
        
        
          字符串的解题总结，包含回文串。
          
        
        </description>
    </item>
    
    <item>
      <title>刷题打卡day5</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day5/</link>
      <pubDate>Fri, 31 Dec 2021 10:05:11 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day5/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>KMP算法理解</title>
      <link>https://firefoxking.github.io/post/KMP%E7%AE%97%E6%B3%95%E7%90%86%E8%A7%A3/</link>
      <pubDate>Thu, 30 Dec 2021 16:57:52 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/KMP%E7%AE%97%E6%B3%95%E7%90%86%E8%A7%A3/</guid>
      <description>
        
          
          
          
        
        
        
          字符串的解题总结，包含KMP字符串匹配等等。
          
        
        </description>
    </item>
    
    <item>
      <title>字符串系列第一弹</title>
      <link>https://firefoxking.github.io/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B3%BB%E5%88%97%E7%AC%AC%E4%B8%80%E5%BC%B9/</link>
      <pubDate>Thu, 30 Dec 2021 13:03:47 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B3%BB%E5%88%97%E7%AC%AC%E4%B8%80%E5%BC%B9/</guid>
      <description>
        
          
          
          
        
        
        
          字符串的解题总结，包含KMP字符串匹配等等。
          
        
        </description>
    </item>
    
    <item>
      <title>刷题打卡day3</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day3/</link>
      <pubDate>Wed, 29 Dec 2021 10:27:46 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day3/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>刷题打卡day2</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day2/</link>
      <pubDate>Tue, 28 Dec 2021 08:54:08 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day2/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>刷题打卡day1</title>
      <link>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day1/</link>
      <pubDate>Mon, 27 Dec 2021 14:11:45 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%88%B7%E9%A2%98%E6%89%93%E5%8D%A1day1/</guid>
      <description>
        
          
          
          
        
        
        
          在代码随想录中进行刷题打卡。
          
        
        </description>
    </item>
    
    <item>
      <title>一文汇总区间调度问题</title>
      <link>https://firefoxking.github.io/post/%E4%B8%80%E6%96%87%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 21 Dec 2021 10:59:28 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%B8%80%E6%96%87%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98/</guid>
      <description>
        
          
          
          
        
        
        
          区间调度问题。
          
        
        </description>
    </item>
    
    <item>
      <title>贪心思想</title>
      <link>https://firefoxking.github.io/post/%E8%B4%AA%E5%BF%83%E6%80%9D%E6%83%B3/</link>
      <pubDate>Tue, 21 Dec 2021 09:32:00 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E8%B4%AA%E5%BF%83%E6%80%9D%E6%83%B3/</guid>
      <description>
        
          
          
          
        
        
        
          贪心算法思想。
          
        
        </description>
    </item>
    
    <item>
      <title>生成树算法</title>
      <link>https://firefoxking.github.io/post/%E7%94%9F%E6%88%90%E6%A0%91%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 20 Dec 2021 18:35:12 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E7%94%9F%E6%88%90%E6%A0%91%E7%AE%97%E6%B3%95/</guid>
      <description>
        
          
          
          
        
        
        
          最小生成树。
          
        
        </description>
    </item>
    
    <item>
      <title>并查集结构</title>
      <link>https://firefoxking.github.io/post/%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%BB%93%E6%9E%84/</link>
      <pubDate>Mon, 20 Dec 2021 16:20:04 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%BB%93%E6%9E%84/</guid>
      <description>
        
          
          
          
        
        
        
          并查集解决图的动态连通性问题。
          
        
        </description>
    </item>
    
    <item>
      <title>图基础结构模板</title>
      <link>https://firefoxking.github.io/post/%E5%9B%BE%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Sat, 18 Dec 2021 12:36:23 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%9B%BE%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          图数据结构。
          
        
        </description>
    </item>
    
    <item>
      <title>动态规划玩游戏问题</title>
      <link>https://firefoxking.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%8E%A9%E6%B8%B8%E6%88%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 17 Dec 2021 20:37:45 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%8E%A9%E6%B8%B8%E6%88%8F%E9%97%AE%E9%A2%98/</guid>
      <description>
        
          
          
          
        
        
        
          动态规划用于游戏问题。
          
        
        </description>
    </item>
    
    <item>
      <title>LRU和LFU结构设计</title>
      <link>https://firefoxking.github.io/post/lru%E5%92%8Clfu%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Fri, 17 Dec 2021 08:38:21 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/lru%E5%92%8Clfu%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>
        
          
          
          
        
        
        
          LRU与LFU缓存算法数据结构。
          
        
        </description>
    </item>
    
    <item>
      <title>单调栈与单调队列</title>
      <link>https://firefoxking.github.io/post/%E5%8D%95%E8%B0%83%E6%A0%88%E4%B8%8E%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/</link>
      <pubDate>Thu, 16 Dec 2021 14:13:55 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%8D%95%E8%B0%83%E6%A0%88%E4%B8%8E%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/</guid>
      <description>
        
          
          
          
        
        
        
          单调栈与单调队列的模板。
          
        
        </description>
    </item>
    
    <item>
      <title>数组去重和nsum问题及其他杂项</title>
      <link>https://firefoxking.github.io/post/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E5%92%8Cnsum%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/</link>
      <pubDate>Wed, 15 Dec 2021 13:53:28 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E5%92%8Cnsum%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/</guid>
      <description>
        
          
          
          
        
        
        
          数组的算法题杂项。
          
        
        </description>
    </item>
    
    <item>
      <title>前缀和与差分数组技巧</title>
      <link>https://firefoxking.github.io/post/%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 14 Dec 2021 20:43:17 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84%E6%8A%80%E5%B7%A7/</guid>
      <description>
        
          
          
          
        
        
        
          前缀和与差分数组技巧。
          
        
        </description>
    </item>
    
    <item>
      <title>二分查找框架</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Mon, 13 Dec 2021 18:42:08 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          二分查找及变形的编码技巧。
          
        
        </description>
    </item>
    
    <item>
      <title>滑动窗口技巧框架</title>
      <link>https://firefoxking.github.io/post/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8A%80%E5%B7%A7%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Fri, 10 Dec 2021 11:59:49 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8A%80%E5%B7%A7%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          解决一类最难掌握的双指针技巧：滑动窗口技巧。
          
        
        </description>
    </item>
    
    <item>
      <title>链表题解题框架</title>
      <link>https://firefoxking.github.io/post/%E9%93%BE%E8%A1%A8%E9%A2%98%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Thu, 09 Dec 2021 20:54:09 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E9%93%BE%E8%A1%A8%E9%A2%98%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          链表是空节点，或者有一个值和一个指向下一个链表的指针，因此很多链表问题可以用递归来处理。
          
        
        </description>
    </item>
    
    <item>
      <title>股票交易问题总结</title>
      <link>https://firefoxking.github.io/post/%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 15 Nov 2021 12:16:07 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid>
      <description>
        
          
          
          
        
        
        
          买卖股票的最佳时机。
          
        
        </description>
    </item>
    
    <item>
      <title>BFS解题框架</title>
      <link>https://firefoxking.github.io/post/BFS%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Sat, 13 Nov 2021 20:33:32 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/BFS%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          BFS 全称是 [Breadth First Search]，中文名是宽度优先搜索，也叫广度优先搜索，是图上最基础、最重要的搜索算法之一。
          
        
        </description>
    </item>
    
    <item>
      <title>背包问题思想的运用</title>
      <link>https://firefoxking.github.io/post/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E6%80%9D%E6%83%B3%E7%9A%84%E8%BF%90%E7%94%A8/</link>
      <pubDate>Sat, 13 Nov 2021 16:36:23 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E6%80%9D%E6%83%B3%E7%9A%84%E8%BF%90%E7%94%A8/</guid>
      <description>
        
          
          
          
        
        
        
          了解了完整的背包问题，今天来看看背包问题的思想能够如何运用到其他算法题目。
          
        
        </description>
    </item>
    
    <item>
      <title>动态规划背包问题</title>
      <link>https://firefoxking.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 12 Nov 2021 11:06:24 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
      <description>
        
          
          
          
        
        
        
          [0,1]背包问题。
          
        
        </description>
    </item>
    
    <item>
      <title>动态规划解题方法</title>
      <link>https://firefoxking.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E9%A2%98%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 12 Nov 2021 09:08:07 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E9%A2%98%E6%96%B9%E6%B3%95/</guid>
      <description>
        
          
          
          
        
        
        
          动态规划问题的一般形式就是求最值。
          
        
        </description>
    </item>
    
    <item>
      <title>回溯算法解题框架</title>
      <link>https://firefoxking.github.io/post/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Thu, 04 Nov 2021 14:52:48 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          回溯法采用试错的思想，它尝试分步的去解决一个问题。
          
        
        </description>
    </item>
    
    <item>
      <title>二叉搜索树(BST)的基本操作</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91BST%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 02 Nov 2021 09:49:31 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91BST%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>
        
          
          
          
        
        
        
          BST 是二叉排序树：根节点大于等于左子树所有节点，小于等于右子树所有节点。
          
        
        </description>
    </item>
    
    <item>
      <title>230  寻找二叉查找树的第 k 个元素</title>
      <link>https://firefoxking.github.io/post/230.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%ACK%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 01 Nov 2021 20:41:06 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/230.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%ACK%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/</guid>
      <description>
        
          
          
          
        
        
        
          二叉树相关题目
          
        
        </description>
    </item>
    
    <item>
      <title>二叉树leetcode题汇总</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91leetcode%E9%A2%98%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 01 Nov 2021 19:35:18 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91leetcode%E9%A2%98%E6%B1%87%E6%80%BB/</guid>
      <description>
        
          
          
          
        
        
        
          二叉树相关题目
          
        
        </description>
    </item>
    
    <item>
      <title>二叉树的Morris遍历</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84Morris%E9%81%8D%E5%8E%86/</link>
      <pubDate>Fri, 29 Oct 2021 19:34:02 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84Morris%E9%81%8D%E5%8E%86/</guid>
      <description>
        
          
          
          
        
        
        
          一、Morris 遍历 一般二叉树遍历都需要 O(h) 的空间来保存上一层的信息。而Morris 遍历利用叶子节点的左右孩子来存后序节点从而实现 O(1) 的空间复杂
          
        
        </description>
    </item>
    
    <item>
      <title>652  寻找重复的子树</title>
      <link>https://firefoxking.github.io/post/652-%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 16:33:12 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/652-%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          652. 寻找重复的子树 利用序列号字符串的方式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { ArrayList&amp;lt;TreeNode&amp;gt; res = new ArrayList&amp;lt;&amp;gt;(); HashMap&amp;lt;String, Integer&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); public List&amp;lt;TreeNode&amp;gt; findDuplicateSubtrees(TreeNode root) { traverse(root); return res; } private String traverse(TreeNode root)
          
        
        </description>
    </item>
    
    <item>
      <title>106  从中序与后序遍历序列构造二叉树</title>
      <link>https://firefoxking.github.io/post/106-%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 16:05:25 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/106-%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          106 从中序与后序遍历序列构造二叉树 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public TreeNode buildTree(int[] inorder, int[] postorder) { return buildTreeHelper(inorder, 0, inorder.length-1, postorder, 0, postorder.length-1); } private TreeNode buildTreeHelper(int[] inorder, int i_start, int i_end, int[] postorder, int p_start, int p_end) { if
          
        
        </description>
    </item>
    
    <item>
      <title>105  从前序与中序遍历序列构造二叉树</title>
      <link>https://firefoxking.github.io/post/105-%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 15:16:06 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/105-%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          105 从前序与中序遍历序列构造二叉树 经典题目可以用递归方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public TreeNode buildTree(int[] preorder, int[] inorder) { return build(preorder,
          
        
        </description>
    </item>
    
    <item>
      <title>654  最大二叉树</title>
      <link>https://firefoxking.github.io/post/654-%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 15:07:02 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/654-%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          二叉树遍历框架：递归与迭代
          
        
        </description>
    </item>
    
    <item>
      <title>二叉树遍历框架</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Fri, 29 Oct 2021 10:45:21 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          二叉树遍历框架：递归与迭代
          
        
        </description>
    </item>
    
    <item>
      <title>114  二叉树展开为链表</title>
      <link>https://firefoxking.github.io/post/114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Fri, 29 Oct 2021 09:46:22 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</guid>
      <description>
        
          
          
          
        
        
        
          leetcode 114 二叉树展开为链表
          
        
        </description>
    </item>
    
  </channel>
</rss>