<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二叉树 on Hello Friend</title>
    
    
    
    <link>https://firefoxking.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
    <description>Recent content in 二叉树 on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 29 Oct 2021 19:34:02 +0800</lastBuildDate>
    
	<atom:link href="https://firefoxking.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>二叉树的Morris遍历</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84Morris%E9%81%8D%E5%8E%86/</link>
      <pubDate>Fri, 29 Oct 2021 19:34:02 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84Morris%E9%81%8D%E5%8E%86/</guid>
      <description>
        
          
          
          
        
        
        
          一、Morris 遍历 一般二叉树遍历都需要 O(h) 的空间来保存上一层的信息。而Morris 遍历利用叶子节点的左右孩子来存后序节点从而实现 O(1) 的空间复杂
          
        
        </description>
    </item>
    
    <item>
      <title>652  寻找重复的子树</title>
      <link>https://firefoxking.github.io/post/652-%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 16:33:12 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/652-%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          652. 寻找重复的子树 利用序列号字符串的方式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { ArrayList&amp;lt;TreeNode&amp;gt; res = new ArrayList&amp;lt;&amp;gt;(); HashMap&amp;lt;String, Integer&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); public List&amp;lt;TreeNode&amp;gt; findDuplicateSubtrees(TreeNode root) { traverse(root); return res; } private String traverse(TreeNode root)
          
        
        </description>
    </item>
    
    <item>
      <title>106  从中序与后序遍历序列构造二叉树</title>
      <link>https://firefoxking.github.io/post/106-%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 16:05:25 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/106-%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          106 从中序与后序遍历序列构造二叉树 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public TreeNode buildTree(int[] inorder, int[] postorder) { return buildTreeHelper(inorder, 0, inorder.length-1, postorder, 0, postorder.length-1); } private TreeNode buildTreeHelper(int[] inorder, int i_start, int i_end, int[] postorder, int p_start, int p_end) { if
          
        
        </description>
    </item>
    
    <item>
      <title>105  从前序与中序遍历序列构造二叉树</title>
      <link>https://firefoxking.github.io/post/105-%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 15:16:06 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/105-%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          105 从前序与中序遍历序列构造二叉树 经典题目可以用递归方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public TreeNode buildTree(int[] preorder, int[] inorder) { return build(preorder,
          
        
        </description>
    </item>
    
    <item>
      <title>654  最大二叉树</title>
      <link>https://firefoxking.github.io/post/654-%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 29 Oct 2021 15:07:02 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/654-%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>
        
          
          
          
        
        
        
          二叉树遍历框架：递归与迭代
          
        
        </description>
    </item>
    
    <item>
      <title>二叉树遍历框架</title>
      <link>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Fri, 29 Oct 2021 10:45:21 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E6%A1%86%E6%9E%B6/</guid>
      <description>
        
          
          
          
        
        
        
          二叉树遍历框架：递归与迭代
          
        
        </description>
    </item>
    
    <item>
      <title>114  二叉树展开为链表</title>
      <link>https://firefoxking.github.io/post/114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Fri, 29 Oct 2021 09:46:22 +0800</pubDate>
      
      <guid>https://firefoxking.github.io/post/114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</guid>
      <description>
        
          
          
          
        
        
        
          leetcode 114 二叉树展开为链表
          
        
        </description>
    </item>
    
  </channel>
</rss>